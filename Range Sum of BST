# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def traverse(self,root,low,high):
        if not root:
            return 0
        if root.val > high:
            #visit all the nodes in left subtree
            self.traverse(root.left,low,high)
        if root.val < low:
            #visit all the nodes in right subtree
            self.traverse(root.right,low,high)
        if low <=root.val <= high :
            #visit all nodes in left and right subtree
            self.rangeSum+=root.val
            self.traverse(root.left,low,high)
            self.traverse(root.right,low,high)

            
        
    def rangeSumBST(self, root, low, high):
        """
        :type root: TreeNode
        :type low: int
        :type high: int
        :rtype: int
        """
        self.rangeSum=0
        self.traverse(root,low,high)
        return self.rangeSum
        
        
